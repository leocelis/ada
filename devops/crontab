# Edit this file to introduce tasks to be run by cron.
#
# Each task to run has to be defined through a single line
# indicating with different fields when the task will be run
# and what command to run for the task
#
# To define the time you can provide concrete values for
# minute (m), hour (h), day of month (dom), month (mon),
# and day of week (dow) or use '*' in these fields (for 'any').#
# Notice that tasks will be started based on the cron's system
# daemon's notion of time and timezones.
#
# Output of the crontab jobs (including errors) is sent through
# email to the user the crontab file belongs to (unless redirected).
#
# For example, you can run a backup of all your user accounts
# at 5 a.m every week with:
# 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/
#
# For more information see the manual pages of crontab(5) and cron(8)
#
# m h  dom mon dow   command
SHELL=/bin/bash
HOME=/
MAILTO="leo@leocelis.com"

# test cron job
#* * * * * cd /home/ada/ && $(which python3) test_cron.py >> /home/ada/cron.log 2>&1

# pull twitter most shared
#0 1 * * * cd /home/ada/ada && python3 content_discovery/twitter_content.py >> ~/cron.log

# sync mailchimp reports
#0 2 * * * cd /home/ada/ && $(which python3) test_cron.py >> /home/ada/cron.log 2>&1
#1 2 * * * echo "----> Syncing Mailchimp reports with MySQL <----" >> /home/ada/cron.log 2>&1
0 1 * * * cd /home/ada/ada && $(which python3) email_analyzer/mailchimp_to_db.py >> /home/ada/cron.log 2>&1

# refresh mailchimp charts
#0 3 * * * cd /home/ada/ && $(which python3) test_cron.py >> /home/ada/cron.log 2>&1
#1 3 * * * echo "----> Refreshing Mailchimp plotly charts <----" >> /home/ada/cron.log 2>&1
#2 3 * * * cd /home/ada/ada && $(which python3) email_analyzer/mailchimp_charts.py >> /home/ada/cron.log 2>&1

# sync mailchimp members
#0 3 * * * cd /home/ada/ && $(which python3) test_cron.py >> /home/ada/cron.log 2>&1
#1 3 * * * echo "----> Syncing Mailchimp members with MySQL <----" >> /home/ada/cron.log 2>&1
0 2 * * * cd /home/ada/ada && $(which python3) email_analyzer/mailchimp_members_sync.py >> /home/ada/cron.log 2>&1

# sync ga reports
#0 4 * * * cd /home/ada/ && $(which python3) test_cron.py >> /home/ada/cron.log 2>&1
#1 4 * * * echo "----> Syncing GA reports <----" >> /home/ada/cron.log 2>&1
0 3 * * * cd /home/ada/ada && $(which python3) content_analyzer/ga_stats.py >> /home/ada/cron.log 2>&1

# ad tech link stats
0 0 * * 1 cd /home/ada/ada/links_extractor && scrapy crawl ada -o adtech.csv -t csv >> /home/ada/cron.log 2>&1
0 0 * * 2 cd /home/ada/ada/ && $(which python3) utils/csv_to_mysql.py >> /home/ada/cron.log 2>&1
0 0 * * 3 cd /home/ada/ada/ && $(which python3) content_analyzer/fb_most_shared.py >> /home/ada/cron.log 2>&1
0 0 * * 4 cd /home/ada/ada/ && $(which python3) content_analyzer/sharethis_to_db.py >> /home/ada/cron.log 2>&1
#0 4 28 * * cd /home/ada/ada/ && $(which python3) content_analyzer/tw_most_retweeted.py >> /home/ada/cron.log 2>&1

# summary table
0 0 * * 6 cd /home/ada/ada/ && $(which python3) reports/links_shares_aggr.py >> /home/ada/cron.log 2>&1

# training datasets generations
0 0 * * 7 cd /home/ada/ada/ && $(which python3) predictions/gen_words_dataset.py >> /home/ada/cron.log 2>&1

# twitch
*/30 * * * * cd /home/ada/ada/ && $(which python3) twitch/collect.py >> /home/ada/cron.log 2>&1
